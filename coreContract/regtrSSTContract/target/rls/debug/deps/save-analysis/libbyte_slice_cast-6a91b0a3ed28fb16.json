{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5","program":"/Users/yunchen/.rustup/toolchains/nightly-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","byte_slice_cast","--edition=2018","/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"std\"","-C","metadata=6a91b0a3ed28fb16","-C","extra-filename=-6a91b0a3ed28fb16","--out-dir","/Users/yunchen/Projects/substrate_test/coreContract/regtrSSTContract/target/rls/debug/deps","-L","dependency=/Users/yunchen/Projects/substrate_test/coreContract/regtrSSTContract/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/yunchen/.rustup/toolchains/nightly-x86_64-apple-darwin"],"output":"/Users/yunchen/Projects/substrate_test/coreContract/regtrSSTContract/target/rls/debug/deps/libbyte_slice_cast-6a91b0a3ed28fb16.rmeta"},"prelude":{"crate_id":{"name":"byte_slice_cast","disambiguator":[10478296616322906134,5769153479522400496]},"crate_root":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src","external_crates":[{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[5815253344629835555,6636975684073219588]}},{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[8640467824410056948,4953413506987166411]}},{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[5943306621316194396,469742592009193771]}},{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[866086214759782827,14885900198568415096]}},{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17595028197444962531,15872922328711317016]}},{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[18318652027981566244,3398209746559794375]}},{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[175364088999297126,4756653861943254916]}},{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[13005419395690637486,15658597275635978548]}},{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[4557001621059672485,7996168842663447033]}},{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[16661770112559451689,541399752796634085]}},{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[13518603241875248388,3599148159379700321]}},{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[1064299617287830167,4730297842045402749]}},{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[16564978169562768493,770119258392268500]}},{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[7756841733123193348,6168259298993529673]}}],"span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":172,"byte_end":41691,"line_start":5,"line_end":1325,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":172,"byte_end":41691,"line_start":5,"line_end":1325,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":79},{"krate":0,"index":100},{"krate":0,"index":98},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":57},{"krate":0,"index":60},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":117},{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":143},{"krate":0,"index":146},{"krate":0,"index":149},{"krate":0,"index":151},{"krate":0,"index":153},{"krate":0,"index":155},{"krate":0,"index":160},{"krate":0,"index":163},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":187},{"krate":0,"index":189},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":211},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":219},{"krate":0,"index":221},{"krate":0,"index":223},{"krate":0,"index":228},{"krate":0,"index":231},{"krate":0,"index":234},{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":245},{"krate":0,"index":248},{"krate":0,"index":251},{"krate":0,"index":253},{"krate":0,"index":255},{"krate":0,"index":257},{"krate":0,"index":262},{"krate":0,"index":265},{"krate":0,"index":268},{"krate":0,"index":270},{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":279},{"krate":0,"index":282},{"krate":0,"index":285},{"krate":0,"index":287},{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":296},{"krate":0,"index":299},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":308},{"krate":0,"index":313},{"krate":0,"index":316},{"krate":0,"index":319},{"krate":0,"index":321},{"krate":0,"index":323},{"krate":0,"index":325},{"krate":0,"index":330},{"krate":0,"index":333},{"krate":0,"index":336},{"krate":0,"index":338}],"decl_id":null,"docs":" Safely cast bytes slices from/to slices of built-in fundamental numeric types.","sig":null,"attributes":[{"value":"! Safely cast bytes slices from/to slices of built-in fundamental numeric types.","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":216,"byte_end":298,"line_start":7,"line_end":7,"column_start":1,"column_end":83}},{"value":"!","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":299,"byte_end":302,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! The provided traits here allow safe casting between byte slices and slices of fundamental","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":303,"byte_end":396,"line_start":9,"line_end":9,"column_start":1,"column_end":94}},{"value":"! numeric types, like integers and floating point numbers. During casting, checks are performed","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":397,"byte_end":494,"line_start":10,"line_end":10,"column_start":1,"column_end":98}},{"value":"! to ensure that the output slice is safe to use: the input slice must be properly aligned for","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":495,"byte_end":591,"line_start":11,"line_end":11,"column_start":1,"column_end":97}},{"value":"! the output type and contain an integer number of values.","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":592,"byte_end":652,"line_start":12,"line_end":12,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":653,"byte_end":656,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! Instead of working only on slices, the traits work on `AsRef<[T]>` in the immutable case and on","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":657,"byte_end":756,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"! `AsMut<[T]>` for the mutable case. As such, it is possible to directly work on e.g. `Vec<T>`","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":757,"byte_end":853,"line_start":15,"line_end":15,"column_start":1,"column_end":97}},{"value":"! and `Box<[T]>` too.","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":854,"byte_end":877,"line_start":16,"line_end":16,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":878,"byte_end":881,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! The content of the output slice will be bitwise equivalent to the input slice, as such extra","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":882,"byte_end":978,"line_start":18,"line_end":18,"column_start":1,"column_end":97}},{"value":"! care has to be taken with regard to endianness.","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":979,"byte_end":1030,"line_start":19,"line_end":19,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":1031,"byte_end":1034,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! # Example with slices","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":1035,"byte_end":1060,"line_start":21,"line_end":21,"column_start":1,"column_end":26}},{"value":"! ```","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":1061,"byte_end":1068,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"! # extern crate byte_slice_cast;","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":1069,"byte_end":1104,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"! # fn main() {","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":1105,"byte_end":1122,"line_start":24,"line_end":24,"column_start":1,"column_end":18}},{"value":"! use byte_slice_cast::*;","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":1123,"byte_end":1150,"line_start":25,"line_end":25,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":1151,"byte_end":1154,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! let slice = [0x0102u16, 0x0304u16, 0x0506u16];","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":1155,"byte_end":1205,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":1206,"byte_end":1209,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! let converted_slice = slice.as_byte_slice();","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":1210,"byte_end":1258,"line_start":29,"line_end":29,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":1259,"byte_end":1262,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! if cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":1263,"byte_end":1299,"line_start":31,"line_end":31,"column_start":1,"column_end":37}},{"value":"!     assert_eq!(converted_slice, &[1, 2, 3, 4, 5, 6]);","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":1300,"byte_end":1357,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"! } else {","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":1358,"byte_end":1370,"line_start":33,"line_end":33,"column_start":1,"column_end":13}},{"value":"!     assert_eq!(converted_slice, &[2, 1, 4, 3, 6, 5]);","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":1371,"byte_end":1428,"line_start":34,"line_end":34,"column_start":1,"column_end":58}},{"value":"! }","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":1429,"byte_end":1434,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":1435,"byte_end":1438,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"! let converted_back_slice = converted_slice.as_slice_of::<u16>().unwrap();","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":1439,"byte_end":1516,"line_start":37,"line_end":37,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":1517,"byte_end":1520,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! assert_eq!(converted_back_slice, &slice);","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":1521,"byte_end":1566,"line_start":39,"line_end":39,"column_start":1,"column_end":46}},{"value":"! # }","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":1567,"byte_end":1574,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":1575,"byte_end":1582,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":1583,"byte_end":1586,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"! # Example with mutable slices","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":1587,"byte_end":1620,"line_start":43,"line_end":43,"column_start":1,"column_end":34}},{"value":"! ```","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":1621,"byte_end":1628,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"! # extern crate byte_slice_cast;","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":1629,"byte_end":1664,"line_start":45,"line_end":45,"column_start":1,"column_end":36}},{"value":"! # fn main() {","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":1665,"byte_end":1682,"line_start":46,"line_end":46,"column_start":1,"column_end":18}},{"value":"! use byte_slice_cast::*;","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":1683,"byte_end":1710,"line_start":47,"line_end":47,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":1711,"byte_end":1714,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"! let mut slice = [0u32; 1];","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":1715,"byte_end":1745,"line_start":49,"line_end":49,"column_start":1,"column_end":31}},{"value":"! let mut converted_slice = slice.as_mut_byte_slice();","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":1746,"byte_end":1802,"line_start":50,"line_end":50,"column_start":1,"column_end":57}},{"value":"! converted_slice.copy_from_slice(&[0x12, 0x34, 0x56, 0x78]);","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":1803,"byte_end":1866,"line_start":51,"line_end":51,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":1867,"byte_end":1870,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"! let mut converted_slice = converted_slice.as_mut_slice_of::<u16>().unwrap();","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":1871,"byte_end":1951,"line_start":53,"line_end":53,"column_start":1,"column_end":81}},{"value":"! converted_slice[0] = 0xffff;","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":1952,"byte_end":1984,"line_start":54,"line_end":54,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":1985,"byte_end":1988,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! if cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":1989,"byte_end":2025,"line_start":56,"line_end":56,"column_start":1,"column_end":37}},{"value":"!     assert_eq!(&slice, &[0xffff5678]);","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":2026,"byte_end":2068,"line_start":57,"line_end":57,"column_start":1,"column_end":43}},{"value":"! } else {","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":2069,"byte_end":2081,"line_start":58,"line_end":58,"column_start":1,"column_end":13}},{"value":"!     assert_eq!(&slice, &[0x7856ffff]);","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":2082,"byte_end":2124,"line_start":59,"line_end":59,"column_start":1,"column_end":43}},{"value":"! }","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":2125,"byte_end":2130,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":2131,"byte_end":2134,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! # }","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":2135,"byte_end":2142,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":2143,"byte_end":2150,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"! # Example with `Vec<T>`","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":2151,"byte_end":2178,"line_start":64,"line_end":64,"column_start":1,"column_end":28}},{"value":"! ```","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":2179,"byte_end":2186,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"! # extern crate byte_slice_cast;","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":2187,"byte_end":2222,"line_start":66,"line_end":66,"column_start":1,"column_end":36}},{"value":"! # fn main() {","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":2223,"byte_end":2240,"line_start":67,"line_end":67,"column_start":1,"column_end":18}},{"value":"! # #[cfg(feature = \"alloc\")] {","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":2241,"byte_end":2274,"line_start":68,"line_end":68,"column_start":1,"column_end":34}},{"value":"! use byte_slice_cast::*;","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":2275,"byte_end":2302,"line_start":69,"line_end":69,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":2303,"byte_end":2306,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"! let vec = vec![0x0102u16, 0x0304u16, 0x0506u16];","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":2307,"byte_end":2359,"line_start":71,"line_end":71,"column_start":1,"column_end":53}},{"value":"! let converted_vec = vec.into_byte_vec();","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":2360,"byte_end":2404,"line_start":72,"line_end":72,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":2405,"byte_end":2408,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"! if cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":2409,"byte_end":2445,"line_start":74,"line_end":74,"column_start":1,"column_end":37}},{"value":"!     assert_eq!(converted_vec, &[1, 2, 3, 4, 5, 6]);","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":2446,"byte_end":2501,"line_start":75,"line_end":75,"column_start":1,"column_end":56}},{"value":"! } else {","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":2502,"byte_end":2514,"line_start":76,"line_end":76,"column_start":1,"column_end":13}},{"value":"!     assert_eq!(converted_vec, &[2, 1, 4, 3, 6, 5]);","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":2515,"byte_end":2570,"line_start":77,"line_end":77,"column_start":1,"column_end":56}},{"value":"! }","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":2571,"byte_end":2576,"line_start":78,"line_end":78,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":2577,"byte_end":2580,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"! let converted_back_vec = converted_vec.into_vec_of::<u16>().unwrap();","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":2581,"byte_end":2654,"line_start":80,"line_end":80,"column_start":1,"column_end":74}},{"value":"! assert_eq!(&converted_back_vec[..], &[0x0102u16, 0x0304u16, 0x0506u16]);","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":2655,"byte_end":2731,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"! # }","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":2732,"byte_end":2739,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"! # }","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":2740,"byte_end":2747,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":2748,"byte_end":2755,"line_start":84,"line_end":84,"column_start":1,"column_end":8}}]},{"kind":"StructVariant","id":{"krate":0,"index":80},"span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":3219,"byte_end":3236,"line_start":103,"line_end":103,"column_start":5,"column_end":22},"name":"AlignmentMismatch","qualname":"::Error::AlignmentMismatch","value":"Error::AlignmentMismatch { dst_type, dst_minimum_alignment }","parent":{"krate":0,"index":79},"children":[],"decl_id":null,"docs":" The input slice is not properly aligned for the\n output data type. E.g. for an `u32` output slice\n the memory must be 4-byte aligned.\n","sig":null,"attributes":[{"value":"/ The input slice is not properly aligned for the","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":3063,"byte_end":3114,"line_start":100,"line_end":100,"column_start":5,"column_end":56}},{"value":"/ output data type. E.g. for an `u32` output slice","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":3119,"byte_end":3171,"line_start":101,"line_end":101,"column_start":5,"column_end":57}},{"value":"/ the memory must be 4-byte aligned.","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":3176,"byte_end":3214,"line_start":102,"line_end":102,"column_start":5,"column_end":43}}]},{"kind":"StructVariant","id":{"krate":0,"index":83},"span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":3418,"byte_end":3432,"line_start":109,"line_end":109,"column_start":5,"column_end":19},"name":"LengthMismatch","qualname":"::Error::LengthMismatch","value":"Error::LengthMismatch { dst_type, src_slice_size, dst_type_size }","parent":{"krate":0,"index":79},"children":[],"decl_id":null,"docs":" A non-integer number of values from the output\n type would be in the output slice.\n","sig":null,"attributes":[{"value":"/ A non-integer number of values from the output","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":3320,"byte_end":3370,"line_start":107,"line_end":107,"column_start":5,"column_end":55}},{"value":"/ type would be in the output slice.","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":3375,"byte_end":3413,"line_start":108,"line_end":108,"column_start":5,"column_end":43}}]},{"kind":"StructVariant","id":{"krate":0,"index":87},"span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":3683,"byte_end":3699,"line_start":117,"line_end":117,"column_start":5,"column_end":21},"name":"CapacityMismatch","qualname":"::Error::CapacityMismatch","value":"Error::CapacityMismatch { dst_type, src_vec_capacity, dst_type_capacity }","parent":{"krate":0,"index":79},"children":[],"decl_id":null,"docs":" When converting a `Vec<T>` it had a capacity that\n allowed only for a non-integer number of values\n from the output type.\n","sig":null,"attributes":[{"value":"/ When converting a `Vec<T>` it had a capacity that","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":3539,"byte_end":3592,"line_start":114,"line_end":114,"column_start":5,"column_end":58}},{"value":"/ allowed only for a non-integer number of values","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":3597,"byte_end":3648,"line_start":115,"line_end":115,"column_start":5,"column_end":56}},{"value":"/ from the output type.","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":3653,"byte_end":3678,"line_start":116,"line_end":116,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":79},"span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":3051,"byte_end":3056,"line_start":99,"line_end":99,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"pub enum Error {\n\n    /// The input slice is not properly aligned for the\n    /// output data type. E.g. for an `u32` output slice\n    /// the memory must be 4-byte aligned.\n    AlignmentMismatch {\n        dst_type: &'static str,\n        dst_minimum_alignment: usize,\n    },\n\n    /// A non-integer number of values from the output\n    /// type would be in the output slice.\n    LengthMismatch {\n        dst_type: &'static str,\n        src_slice_size: usize,\n        dst_type_size: usize,\n    },\n\n    /// When converting a `Vec<T>` it had a capacity that\n    /// allowed only for a non-integer number of values\n    /// from the output type.\n    CapacityMismatch {\n        dst_type: &'static str,\n        src_vec_capacity: usize,\n        dst_type_capacity: usize,\n    },\n}","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":83},{"krate":0,"index":87}],"decl_id":null,"docs":" Possible errors during slice conversion.\n","sig":null,"attributes":[{"value":"/ Possible errors during slice conversion.","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":2958,"byte_end":3002,"line_start":97,"line_end":97,"column_start":1,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":29},"span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":8002,"byte_end":8015,"line_start":277,"line_end":277,"column_start":18,"column_end":31},"name":"FromByteSlice","qualname":"::FromByteSlice","value":"FromByteSlice","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":32}],"decl_id":null,"docs":" Trait for converting from a byte slice to a slice of a fundamental, built-in numeric type.","sig":null,"attributes":[{"value":"/ Trait for converting from a byte slice to a slice of a fundamental, built-in numeric type.","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":7701,"byte_end":7795,"line_start":271,"line_end":271,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":7796,"byte_end":7799,"line_start":272,"line_end":272,"column_start":1,"column_end":4}},{"value":"/ This trait is an implementation detail. Use the [`AsSliceOf`] and [`AsMutSliceOf`] traits.","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":7800,"byte_end":7894,"line_start":273,"line_end":273,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":7895,"byte_end":7898,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ [`AsSliceOf`]: trait.AsSliceOf.html","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":7899,"byte_end":7938,"line_start":275,"line_end":275,"column_start":1,"column_end":40}},{"value":"/ [`AsMutSliceOf`]: trait.AsMutSliceOf.html","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":7939,"byte_end":7984,"line_start":276,"line_end":276,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":8162,"byte_end":8177,"line_start":283,"line_end":283,"column_start":8,"column_end":23},"name":"from_byte_slice","qualname":"::FromByteSlice::from_byte_slice","value":"pub fn from_byte_slice<T: AsRef<[u8]> + ?Sized>(&T) -> Result<&[Self], Error>","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Convert from an immutable byte slice to a immutable slice of a fundamental, built-in\n numeric type\n","sig":null,"attributes":[{"value":"/ Convert from an immutable byte slice to a immutable slice of a fundamental, built-in","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":8045,"byte_end":8133,"line_start":281,"line_end":281,"column_start":5,"column_end":93}},{"value":"/ numeric type","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":8138,"byte_end":8154,"line_start":282,"line_end":282,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":8358,"byte_end":8377,"line_start":286,"line_end":286,"column_start":8,"column_end":27},"name":"from_mut_byte_slice","qualname":"::FromByteSlice::from_mut_byte_slice","value":"pub fn from_mut_byte_slice<T: AsMut<[u8]> + ?Sized>(&mut T)\n-> Result<&mut [Self], Error>","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Convert from an mutable byte slice to a mutable slice of a fundamental, built-in numeric\n type\n","sig":null,"attributes":[{"value":"/ Convert from an mutable byte slice to a mutable slice of a fundamental, built-in numeric","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":8245,"byte_end":8337,"line_start":284,"line_end":284,"column_start":5,"column_end":97}},{"value":"/ type","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":8342,"byte_end":8350,"line_start":285,"line_end":285,"column_start":5,"column_end":13}}]},{"kind":"Trait","id":{"krate":0,"index":34},"span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":8717,"byte_end":8728,"line_start":295,"line_end":295,"column_start":18,"column_end":29},"name":"ToByteSlice","qualname":"::ToByteSlice","value":"ToByteSlice","parent":null,"children":[{"krate":0,"index":35}],"decl_id":null,"docs":" Trait for converting from an immutable slice of a fundamental, built-in numeric type to an\n immutable byte slice.","sig":null,"attributes":[{"value":"/ Trait for converting from an immutable slice of a fundamental, built-in numeric type to an","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":8452,"byte_end":8546,"line_start":289,"line_end":289,"column_start":1,"column_end":95}},{"value":"/ immutable byte slice.","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":8547,"byte_end":8572,"line_start":290,"line_end":290,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":8573,"byte_end":8576,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ This trait is an implementation detail. Use the [`AsByteSlice`] trait.","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":8577,"byte_end":8651,"line_start":292,"line_end":292,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":8652,"byte_end":8655,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ [`AsByteSlice`]: trait.AsByteSlice.html","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":8656,"byte_end":8699,"line_start":294,"line_end":294,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":8876,"byte_end":8889,"line_start":301,"line_end":301,"column_start":8,"column_end":21},"name":"to_byte_slice","qualname":"::ToByteSlice::to_byte_slice","value":"pub fn to_byte_slice<T: AsRef<[Self]> + ?Sized>(&T) -> &[u8]","parent":{"krate":0,"index":34},"children":[],"decl_id":null,"docs":" Convert from an immutable slice of a fundamental, built-in numeric type to an immutable\n byte slice\n","sig":null,"attributes":[{"value":"/ Convert from an immutable slice of a fundamental, built-in numeric type to an immutable","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":8758,"byte_end":8849,"line_start":299,"line_end":299,"column_start":5,"column_end":96}},{"value":"/ byte slice","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":8854,"byte_end":8868,"line_start":300,"line_end":300,"column_start":5,"column_end":19}}]},{"kind":"Trait","id":{"krate":0,"index":37},"span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":9209,"byte_end":9223,"line_start":310,"line_end":310,"column_start":18,"column_end":32},"name":"ToMutByteSlice","qualname":"::ToMutByteSlice","value":"ToMutByteSlice","parent":null,"children":[{"krate":0,"index":38}],"decl_id":null,"docs":" Trait for converting from a mutable slice of a fundamental, built-in numeric type to a mutable\n byte slice.","sig":null,"attributes":[{"value":"/ Trait for converting from a mutable slice of a fundamental, built-in numeric type to a mutable","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":8941,"byte_end":9039,"line_start":304,"line_end":304,"column_start":1,"column_end":99}},{"value":"/ byte slice.","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":9040,"byte_end":9055,"line_start":305,"line_end":305,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":9056,"byte_end":9059,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ This trait is an implementation detail. Use the [`AsMutByteSlice`] trait.","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":9060,"byte_end":9137,"line_start":307,"line_end":307,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":9138,"byte_end":9141,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ [`AsMutByteSlice`]: trait.AsMutByteSlice.html","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":9142,"byte_end":9191,"line_start":309,"line_end":309,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":9365,"byte_end":9382,"line_start":316,"line_end":316,"column_start":8,"column_end":25},"name":"to_mut_byte_slice","qualname":"::ToMutByteSlice::to_mut_byte_slice","value":"pub fn to_mut_byte_slice<T: AsMut<[Self]> + ?Sized>(&mut T) -> &mut [u8]","parent":{"krate":0,"index":37},"children":[],"decl_id":null,"docs":" Convert from a mutable slice of a fundamental, built-in numeric type to a mutable byte\n slice\n","sig":null,"attributes":[{"value":"/ Convert from a mutable slice of a fundamental, built-in numeric type to a mutable byte","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":9253,"byte_end":9343,"line_start":314,"line_end":314,"column_start":5,"column_end":95}},{"value":"/ slice","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":9348,"byte_end":9357,"line_start":315,"line_end":315,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":40},"span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":9708,"byte_end":9719,"line_start":325,"line_end":325,"column_start":18,"column_end":29},"name":"FromByteVec","qualname":"::FromByteVec","value":"FromByteVec","parent":null,"children":[{"krate":0,"index":41}],"decl_id":null,"docs":" Trait for converting from a byte `Vec<u8>` to a `Vec<T>` of a fundamental, built-in numeric type.","sig":null,"attributes":[{"value":"/ Trait for converting from a byte `Vec<u8>` to a `Vec<T>` of a fundamental, built-in numeric type.","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":9442,"byte_end":9543,"line_start":319,"line_end":319,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":9544,"byte_end":9547,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ This trait is an implementation detail. Use the [`IntoVecOf`] trait.","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":9548,"byte_end":9620,"line_start":321,"line_end":321,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":9621,"byte_end":9624,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ [`IntoVecOf`]: trait.IntoVecOf.html","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":9625,"byte_end":9664,"line_start":323,"line_end":323,"column_start":1,"column_end":40}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":9665,"byte_end":9690,"line_start":324,"line_end":324,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":9852,"byte_end":9865,"line_start":331,"line_end":331,"column_start":8,"column_end":21},"name":"from_byte_vec","qualname":"::FromByteVec::from_byte_vec","value":"pub fn from_byte_vec(Vec<u8>) -> Result<Vec<Self>, Error>","parent":{"krate":0,"index":40},"children":[],"decl_id":null,"docs":" Convert from a byte `Vec<u8>` to a `Vec<T>` of a fundamental, built-in\n numeric type\n","sig":null,"attributes":[{"value":"/ Convert from a byte `Vec<u8>` to a `Vec<T>` of a fundamental, built-in","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":9749,"byte_end":9823,"line_start":329,"line_end":329,"column_start":5,"column_end":79}},{"value":"/ numeric type","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":9828,"byte_end":9844,"line_start":330,"line_end":330,"column_start":5,"column_end":21}}]},{"kind":"Trait","id":{"krate":0,"index":43},"span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":14001,"byte_end":14010,"line_start":450,"line_end":450,"column_start":11,"column_end":20},"name":"AsSliceOf","qualname":"::AsSliceOf","value":"AsSliceOf","parent":null,"children":[{"krate":0,"index":44}],"decl_id":null,"docs":" Trait for converting from a byte slice to a slice of a fundamental, built-in numeric type.","sig":null,"attributes":[{"value":"/ Trait for converting from a byte slice to a slice of a fundamental, built-in numeric type.","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":13463,"byte_end":13557,"line_start":432,"line_end":432,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":13558,"byte_end":13561,"line_start":433,"line_end":433,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":13562,"byte_end":13575,"line_start":434,"line_end":434,"column_start":1,"column_end":14}},{"value":"/ ```no_run","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":13576,"byte_end":13589,"line_start":435,"line_end":435,"column_start":1,"column_end":14}},{"value":"/ # extern crate byte_slice_cast;","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":13590,"byte_end":13625,"line_start":436,"line_end":436,"column_start":1,"column_end":36}},{"value":"/ # fn main() {","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":13626,"byte_end":13643,"line_start":437,"line_end":437,"column_start":1,"column_end":18}},{"value":"/ use byte_slice_cast::*;","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":13644,"byte_end":13671,"line_start":438,"line_end":438,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":13672,"byte_end":13675,"line_start":439,"line_end":439,"column_start":1,"column_end":4}},{"value":"/ let slice = [1u8, 2u8, 3u8, 4u8, 5u8, 6u8];","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":13676,"byte_end":13723,"line_start":440,"line_end":440,"column_start":1,"column_end":48}},{"value":"/ let converted_slice = slice.as_slice_of::<u16>().unwrap();","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":13724,"byte_end":13786,"line_start":441,"line_end":441,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":13787,"byte_end":13790,"line_start":442,"line_end":442,"column_start":1,"column_end":4}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":13791,"byte_end":13827,"line_start":443,"line_end":443,"column_start":1,"column_end":37}},{"value":"/     assert_eq!(converted_slice, &[0x0102, 0x0304, 0x0506]);","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":13828,"byte_end":13891,"line_start":444,"line_end":444,"column_start":1,"column_end":64}},{"value":"/ } else {","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":13892,"byte_end":13904,"line_start":445,"line_end":445,"column_start":1,"column_end":13}},{"value":"/     assert_eq!(converted_slice, &[0x0201, 0x0403, 0x0605]);","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":13905,"byte_end":13968,"line_start":446,"line_end":446,"column_start":1,"column_end":64}},{"value":"/ }","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":13969,"byte_end":13974,"line_start":447,"line_end":447,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":13975,"byte_end":13982,"line_start":448,"line_end":448,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":13983,"byte_end":13990,"line_start":449,"line_end":449,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":14020,"byte_end":14031,"line_start":451,"line_end":451,"column_start":8,"column_end":19},"name":"as_slice_of","qualname":"::AsSliceOf::as_slice_of","value":"pub fn as_slice_of<T: FromByteSlice>(&Self) -> Result<&[T], Error>","parent":{"krate":0,"index":43},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":50},"span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":14821,"byte_end":14833,"line_start":479,"line_end":479,"column_start":11,"column_end":23},"name":"AsMutSliceOf","qualname":"::AsMutSliceOf","value":"AsMutSliceOf","parent":null,"children":[{"krate":0,"index":51}],"decl_id":null,"docs":" Trait for converting from a mutable byte slice to a mutable slice of a fundamental, built-in\n numeric type.","sig":null,"attributes":[{"value":"/ Trait for converting from a mutable byte slice to a mutable slice of a fundamental, built-in","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":14255,"byte_end":14351,"line_start":460,"line_end":460,"column_start":1,"column_end":97}},{"value":"/ numeric type.","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":14352,"byte_end":14369,"line_start":461,"line_end":461,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":14370,"byte_end":14373,"line_start":462,"line_end":462,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":14374,"byte_end":14387,"line_start":463,"line_end":463,"column_start":1,"column_end":14}},{"value":"/ ```no_run","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":14388,"byte_end":14401,"line_start":464,"line_end":464,"column_start":1,"column_end":14}},{"value":"/ # extern crate byte_slice_cast;","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":14402,"byte_end":14437,"line_start":465,"line_end":465,"column_start":1,"column_end":36}},{"value":"/ # fn main() {","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":14438,"byte_end":14455,"line_start":466,"line_end":466,"column_start":1,"column_end":18}},{"value":"/ use byte_slice_cast::*;","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":14456,"byte_end":14483,"line_start":467,"line_end":467,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":14484,"byte_end":14487,"line_start":468,"line_end":468,"column_start":1,"column_end":4}},{"value":"/ let mut slice = [1u8, 2u8, 3u8, 4u8, 5u8, 6u8];","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":14488,"byte_end":14539,"line_start":469,"line_end":469,"column_start":1,"column_end":52}},{"value":"/ let converted_slice = slice.as_mut_slice_of::<u16>().unwrap();","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":14540,"byte_end":14606,"line_start":470,"line_end":470,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":14607,"byte_end":14610,"line_start":471,"line_end":471,"column_start":1,"column_end":4}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":14611,"byte_end":14647,"line_start":472,"line_end":472,"column_start":1,"column_end":37}},{"value":"/     assert_eq!(converted_slice, &[0x0102, 0x0304, 0x0506]);","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":14648,"byte_end":14711,"line_start":473,"line_end":473,"column_start":1,"column_end":64}},{"value":"/ } else {","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":14712,"byte_end":14724,"line_start":474,"line_end":474,"column_start":1,"column_end":13}},{"value":"/     assert_eq!(converted_slice, &[0x0201, 0x0403, 0x0605]);","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":14725,"byte_end":14788,"line_start":475,"line_end":475,"column_start":1,"column_end":64}},{"value":"/ }","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":14789,"byte_end":14794,"line_start":476,"line_end":476,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":14795,"byte_end":14802,"line_start":477,"line_end":477,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":14803,"byte_end":14810,"line_start":478,"line_end":478,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":14843,"byte_end":14858,"line_start":480,"line_end":480,"column_start":8,"column_end":23},"name":"as_mut_slice_of","qualname":"::AsMutSliceOf::as_mut_slice_of","value":"pub fn as_mut_slice_of<T: FromByteSlice>(&mut Self) -> Result<&mut [T], Error>","parent":{"krate":0,"index":50},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":57},"span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":15675,"byte_end":15686,"line_start":508,"line_end":508,"column_start":11,"column_end":22},"name":"AsByteSlice","qualname":"::AsByteSlice","value":"AsByteSlice<T>","parent":null,"children":[{"krate":0,"index":59}],"decl_id":null,"docs":" Trait for converting from an immutable slice of a fundamental, built-in numeric type to an\n immutable byte slice.","sig":null,"attributes":[{"value":"/ Trait for converting from an immutable slice of a fundamental, built-in numeric type to an","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":15109,"byte_end":15203,"line_start":489,"line_end":489,"column_start":1,"column_end":95}},{"value":"/ immutable byte slice.","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":15204,"byte_end":15229,"line_start":490,"line_end":490,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":15230,"byte_end":15233,"line_start":491,"line_end":491,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":15234,"byte_end":15247,"line_start":492,"line_end":492,"column_start":1,"column_end":14}},{"value":"/ ```no_run","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":15248,"byte_end":15261,"line_start":493,"line_end":493,"column_start":1,"column_end":14}},{"value":"/ # extern crate byte_slice_cast;","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":15262,"byte_end":15297,"line_start":494,"line_end":494,"column_start":1,"column_end":36}},{"value":"/ # fn main() {","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":15298,"byte_end":15315,"line_start":495,"line_end":495,"column_start":1,"column_end":18}},{"value":"/ use byte_slice_cast::*;","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":15316,"byte_end":15343,"line_start":496,"line_end":496,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":15344,"byte_end":15347,"line_start":497,"line_end":497,"column_start":1,"column_end":4}},{"value":"/ let slice: [u16; 3] = [0x0102, 0x0304, 0x0506];","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":15348,"byte_end":15399,"line_start":498,"line_end":498,"column_start":1,"column_end":52}},{"value":"/ let converted_slice = slice.as_byte_slice();","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":15400,"byte_end":15448,"line_start":499,"line_end":499,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":15449,"byte_end":15452,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":15453,"byte_end":15489,"line_start":501,"line_end":501,"column_start":1,"column_end":37}},{"value":"/     assert_eq!(converted_slice, &[1u8, 2u8, 3u8, 4u8, 5u8, 6u8]);","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":15490,"byte_end":15559,"line_start":502,"line_end":502,"column_start":1,"column_end":70}},{"value":"/ } else {","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":15560,"byte_end":15572,"line_start":503,"line_end":503,"column_start":1,"column_end":13}},{"value":"/     assert_eq!(converted_slice, &[2u8, 1u8, 4u8, 3u8, 6u8, 5u8]);","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":15573,"byte_end":15642,"line_start":504,"line_end":504,"column_start":1,"column_end":70}},{"value":"/ }","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":15643,"byte_end":15648,"line_start":505,"line_end":505,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":15649,"byte_end":15656,"line_start":506,"line_end":506,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":15657,"byte_end":15664,"line_start":507,"line_end":507,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":15699,"byte_end":15712,"line_start":509,"line_end":509,"column_start":8,"column_end":21},"name":"as_byte_slice","qualname":"::AsByteSlice::as_byte_slice","value":"pub fn as_byte_slice(&Self) -> &[u8]","parent":{"krate":0,"index":57},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":64},"span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":16466,"byte_end":16480,"line_start":537,"line_end":537,"column_start":11,"column_end":25},"name":"AsMutByteSlice","qualname":"::AsMutByteSlice","value":"AsMutByteSlice<T>","parent":null,"children":[{"krate":0,"index":66}],"decl_id":null,"docs":" Trait for converting from a mutable slice of a fundamental, built-in numeric type to a mutable\n byte slice.","sig":null,"attributes":[{"value":"/ Trait for converting from a mutable slice of a fundamental, built-in numeric type to a mutable","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":15890,"byte_end":15988,"line_start":518,"line_end":518,"column_start":1,"column_end":99}},{"value":"/ byte slice.","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":15989,"byte_end":16004,"line_start":519,"line_end":519,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":16005,"byte_end":16008,"line_start":520,"line_end":520,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":16009,"byte_end":16022,"line_start":521,"line_end":521,"column_start":1,"column_end":14}},{"value":"/ ```no_run","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":16023,"byte_end":16036,"line_start":522,"line_end":522,"column_start":1,"column_end":14}},{"value":"/ # extern crate byte_slice_cast;","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":16037,"byte_end":16072,"line_start":523,"line_end":523,"column_start":1,"column_end":36}},{"value":"/ # fn main() {","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":16073,"byte_end":16090,"line_start":524,"line_end":524,"column_start":1,"column_end":18}},{"value":"/ use byte_slice_cast::*;","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":16091,"byte_end":16118,"line_start":525,"line_end":525,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":16119,"byte_end":16122,"line_start":526,"line_end":526,"column_start":1,"column_end":4}},{"value":"/ let mut slice: [u16; 3] = [0x0102, 0x0304, 0x0506];","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":16123,"byte_end":16178,"line_start":527,"line_end":527,"column_start":1,"column_end":56}},{"value":"/ let converted_slice = slice.as_mut_byte_slice();","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":16179,"byte_end":16231,"line_start":528,"line_end":528,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":16232,"byte_end":16235,"line_start":529,"line_end":529,"column_start":1,"column_end":4}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":16236,"byte_end":16272,"line_start":530,"line_end":530,"column_start":1,"column_end":37}},{"value":"/     assert_eq!(converted_slice, &mut [1u8, 2u8, 3u8, 4u8, 5u8, 6u8]);","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":16273,"byte_end":16346,"line_start":531,"line_end":531,"column_start":1,"column_end":74}},{"value":"/ } else {","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":16347,"byte_end":16359,"line_start":532,"line_end":532,"column_start":1,"column_end":13}},{"value":"/     assert_eq!(converted_slice, &mut [2u8, 1u8, 4u8, 3u8, 6u8, 5u8]);","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":16360,"byte_end":16433,"line_start":533,"line_end":533,"column_start":1,"column_end":74}},{"value":"/ }","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":16434,"byte_end":16439,"line_start":534,"line_end":534,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":16440,"byte_end":16447,"line_start":535,"line_end":535,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":16448,"byte_end":16455,"line_start":536,"line_end":536,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":16493,"byte_end":16510,"line_start":538,"line_end":538,"column_start":8,"column_end":25},"name":"as_mut_byte_slice","qualname":"::AsMutByteSlice::as_mut_byte_slice","value":"pub fn as_mut_byte_slice(&mut Self) -> &mut [u8]","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":71},"span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":17309,"byte_end":17318,"line_start":567,"line_end":567,"column_start":11,"column_end":20},"name":"IntoVecOf","qualname":"::IntoVecOf","value":"IntoVecOf","parent":null,"children":[{"krate":0,"index":72}],"decl_id":null,"docs":" Trait for converting from a byte `Vec<u8>` to a `Vec<T>` of a fundamental, built-in\n numeric type.","sig":null,"attributes":[{"value":"/ Trait for converting from a byte `Vec<u8>` to a `Vec<T>` of a fundamental, built-in","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":16721,"byte_end":16808,"line_start":547,"line_end":547,"column_start":1,"column_end":88}},{"value":"/ numeric type.","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":16809,"byte_end":16826,"line_start":548,"line_end":548,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":16827,"byte_end":16830,"line_start":549,"line_end":549,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":16831,"byte_end":16844,"line_start":550,"line_end":550,"column_start":1,"column_end":14}},{"value":"/ ```no_run","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":16845,"byte_end":16858,"line_start":551,"line_end":551,"column_start":1,"column_end":14}},{"value":"/ # extern crate byte_slice_cast;","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":16859,"byte_end":16894,"line_start":552,"line_end":552,"column_start":1,"column_end":36}},{"value":"/ # fn main() {","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":16895,"byte_end":16912,"line_start":553,"line_end":553,"column_start":1,"column_end":18}},{"value":"/ use byte_slice_cast::*;","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":16913,"byte_end":16940,"line_start":554,"line_end":554,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":16941,"byte_end":16944,"line_start":555,"line_end":555,"column_start":1,"column_end":4}},{"value":"/ let mut vec: Vec<u8> = vec![1u8, 2u8, 3u8, 4u8, 5u8, 6u8];","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":16945,"byte_end":17007,"line_start":556,"line_end":556,"column_start":1,"column_end":63}},{"value":"/ let converted_vec = vec.into_vec_of::<u16>().unwrap();","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":17008,"byte_end":17066,"line_start":557,"line_end":557,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":17067,"byte_end":17070,"line_start":558,"line_end":558,"column_start":1,"column_end":4}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":17071,"byte_end":17107,"line_start":559,"line_end":559,"column_start":1,"column_end":37}},{"value":"/     assert_eq!(converted_vec, vec![0x0102, 0x0304, 0x0506]);","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":17108,"byte_end":17172,"line_start":560,"line_end":560,"column_start":1,"column_end":65}},{"value":"/ } else {","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":17173,"byte_end":17185,"line_start":561,"line_end":561,"column_start":1,"column_end":13}},{"value":"/     assert_eq!(converted_vec, vec![0x0201, 0x0403, 0x0605]);","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":17186,"byte_end":17250,"line_start":562,"line_end":562,"column_start":1,"column_end":65}},{"value":"/ }","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":17251,"byte_end":17256,"line_start":563,"line_end":563,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":17257,"byte_end":17264,"line_start":564,"line_end":564,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":17265,"byte_end":17272,"line_start":565,"line_end":565,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":17273,"byte_end":17298,"line_start":566,"line_end":566,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":17328,"byte_end":17339,"line_start":568,"line_end":568,"column_start":8,"column_end":19},"name":"into_vec_of","qualname":"::IntoVecOf::into_vec_of","value":"pub fn into_vec_of<T: FromByteVec>(Self) -> Result<Vec<T>, Error>","parent":{"krate":0,"index":71},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":77},"span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":18145,"byte_end":18156,"line_start":598,"line_end":598,"column_start":11,"column_end":22},"name":"IntoByteVec","qualname":"::IntoByteVec","value":"IntoByteVec","parent":null,"children":[{"krate":0,"index":78}],"decl_id":null,"docs":" Trait for converting from a `Vec<T>` of a fundamental, built-in numeric type to a\n byte `Vec<u8>`.","sig":null,"attributes":[{"value":"/ Trait for converting from a `Vec<T>` of a fundamental, built-in numeric type to a","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":17564,"byte_end":17649,"line_start":578,"line_end":578,"column_start":1,"column_end":86}},{"value":"/ byte `Vec<u8>`.","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":17650,"byte_end":17669,"line_start":579,"line_end":579,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":17670,"byte_end":17673,"line_start":580,"line_end":580,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":17674,"byte_end":17687,"line_start":581,"line_end":581,"column_start":1,"column_end":14}},{"value":"/ ```no_run","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":17688,"byte_end":17701,"line_start":582,"line_end":582,"column_start":1,"column_end":14}},{"value":"/ # extern crate byte_slice_cast;","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":17702,"byte_end":17737,"line_start":583,"line_end":583,"column_start":1,"column_end":36}},{"value":"/ # fn main() {","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":17738,"byte_end":17755,"line_start":584,"line_end":584,"column_start":1,"column_end":18}},{"value":"/ use byte_slice_cast::*;","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":17756,"byte_end":17783,"line_start":585,"line_end":585,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":17784,"byte_end":17787,"line_start":586,"line_end":586,"column_start":1,"column_end":4}},{"value":"/ let mut vec: Vec<u16> = vec![0x0102, 0x0304, 0x0506];","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":17788,"byte_end":17845,"line_start":587,"line_end":587,"column_start":1,"column_end":58}},{"value":"/ let converted_vec = vec.into_byte_vec();","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":17846,"byte_end":17890,"line_start":588,"line_end":588,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":17891,"byte_end":17894,"line_start":589,"line_end":589,"column_start":1,"column_end":4}},{"value":"/ if cfg!(target_endian = \"big\") {","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":17895,"byte_end":17931,"line_start":590,"line_end":590,"column_start":1,"column_end":37}},{"value":"/     assert_eq!(converted_vec, vec![1u8, 2u8, 3u8, 4u8, 5u8, 6u8]);","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":17932,"byte_end":18002,"line_start":591,"line_end":591,"column_start":1,"column_end":71}},{"value":"/ } else {","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":18003,"byte_end":18015,"line_start":592,"line_end":592,"column_start":1,"column_end":13}},{"value":"/     assert_eq!(converted_vec, vec![2u8, 1u8, 4u8, 3u8, 6u8, 5u8]);","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":18016,"byte_end":18086,"line_start":593,"line_end":593,"column_start":1,"column_end":71}},{"value":"/ }","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":18087,"byte_end":18092,"line_start":594,"line_end":594,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":18093,"byte_end":18100,"line_start":595,"line_end":595,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":18101,"byte_end":18108,"line_start":596,"line_end":596,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":18109,"byte_end":18134,"line_start":597,"line_end":597,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":18166,"byte_end":18179,"line_start":599,"line_end":599,"column_start":8,"column_end":21},"name":"into_byte_vec","qualname":"::IntoByteVec::into_byte_vec","value":"pub fn into_byte_vec(Self) -> Vec<u8>","parent":{"krate":0,"index":77},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":3833,"byte_end":3838,"line_start":124,"line_end":124,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":11}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":5483,"byte_end":5488,"line_start":178,"line_end":178,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":15}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":14128,"byte_end":14129,"line_start":454,"line_end":454,"column_start":45,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":14966,"byte_end":14967,"line_start":483,"line_end":483,"column_start":48,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":15797,"byte_end":15798,"line_start":512,"line_end":512,"column_start":65,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":16609,"byte_end":16610,"line_start":541,"line_end":541,"column_start":71,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":17436,"byte_end":17439,"line_start":572,"line_end":572,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":3833,"byte_end":3838,"line_start":124,"line_end":124,"column_start":23,"column_end":28},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":79},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":5483,"byte_end":5488,"line_start":178,"line_end":178,"column_start":19,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":79},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":14128,"byte_end":14129,"line_start":454,"line_end":454,"column_start":45,"column_end":46},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":47},"to":{"krate":0,"index":43}},{"span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":14966,"byte_end":14967,"line_start":483,"line_end":483,"column_start":48,"column_end":49},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":54},"to":{"krate":0,"index":50}},{"span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":15797,"byte_end":15798,"line_start":512,"line_end":512,"column_start":65,"column_end":66},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":62},"to":{"krate":0,"index":57}},{"span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":16609,"byte_end":16610,"line_start":541,"line_end":541,"column_start":71,"column_end":72},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":69},"to":{"krate":0,"index":64}},{"span":{"file_name":"/Users/yunchen/.cargo/registry/src/github.com-1ecc6299db9ec823/byte-slice-cast-0.3.5/src/lib.rs","byte_start":17436,"byte_end":17439,"line_start":572,"line_end":572,"column_start":20,"column_end":23},"kind":{"Impl":{"id":6}},"from":{"krate":5,"index":4226},"to":{"krate":0,"index":71}}]}